// Store the sequence generated by the game
let gameSeq = [];
// Store the sequence entered by the user
let userSeq = [];
// Available colors (corresponds to button classes in HTML)
let colors = ["red", "green", "orange", "yellow"];

// Game state variables
let started = false;  // Flag to check if the game has started
let level = 0;        // Current game level
let maxScore = 0;     // Stores the highest score achieved

// Select heading element for displaying messages
let h2 = document.querySelector("h2");

// Start the game when any key is pressed
document.addEventListener("keypress", function(){
    if(started == false){
        console.log("started");
        started = true;
    }
    levelUp(); // Start the first level
});

// Flash animation effect for buttons
function buttonFlash(btn) {
    btn.classList.add("flash");    // Add CSS class to highlight
    setTimeout(() => {
        btn.classList.remove("flash");  // Remove after 250ms
    }, 250);
}

// Function to move to the next level
function levelUp() {
    userSeq = [];   // Clear user sequence for new level
    level++;        // Increase level
    h2.innerText = `Level ${level}`;  // Update heading text

    // Choose a random color/button
    let randIdx = Math.floor(Math.random() * 4);
    let randCol = colors[randIdx];
    let randBtn = document.querySelector(`.${randCol}`);

    // Show flash animation on the chosen button
    buttonFlash(randBtn);

    // Add the chosen color to the game sequence
    gameSeq.push(randCol);
    console.log("Game Sequence -> ",gameSeq);
}

// Check user input against the game sequence
function checkAns(idx) {
    // Compare user’s latest input with the game’s sequence
    if(gameSeq[idx] === userSeq[idx]){
        // If user completed the sequence correctly, go to next level
        if(gameSeq.length == userSeq.length){
            console.log("User Entered -> ",userSeq);
            setTimeout(levelUp, 1000); // Move to next level after 1s delay
        }
    } else {
        // If user makes a mistake → Game Over
        maxScore = highestScore(level, maxScore);
        h2.innerHTML = `Game Over!<b> Your score is: ${level-1}</b> <br> Highest Score: ${maxScore} <br> Press any key to start`;

        // Flash background red briefly
        document.querySelector("body").style.backgroundColor = "red";
        setTimeout(() => {
            document.querySelector("body").style.backgroundColor = "black ";
        }, 200);

        reset(); // Reset game state
    }
}

// Function to calculate & update highest score
function highestScore(level, maxScore){
    return Math.max(level-1, maxScore);
}

// Handle user button click
function btnPress() {
    let btn = this;
    buttonFlash(btn); // Flash effect on button press
    console.log("button pressed");

    // Get the button color (id attribute)
    let userColor = btn.getAttribute("id");
    userSeq.push(userColor); // Add user input to sequence

    // Check the user’s input
    checkAns(userSeq.length - 1);
}

// Add click event listeners to all buttons
let allBtns = document.querySelectorAll(".btn");
for(btn of allBtns){
    btn.addEventListener("click", btnPress);
}

// Reset the game state after game over
function reset() {
    gameSeq = [];
    userSeq = [];
    started = false;
    level = 0;
}
